// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id_user   String @id @default(uuid())
  nama_user String
  role      Role
  username  String @unique
  password  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Transaksi Transaksi[]
}

model Transaksi {
  id_transaksi   String   @id @default(uuid())
  tgl_transaksi  DateTime
  id_user        String
  id_meja        String
  nama_pelanggan String   @unique
  status         Status

  User            User              @relation(fields: [id_user], references: [id_user])
  Meja            Meja              @relation(fields: [id_meja], references: [id_meja])
  DetailTransaksi DetailTransaksi[]
}

model DetailTransaksi {
  id_detail_transaksi String @id @default(uuid())
  id_transaksi        String
  id_menu             String
  harga               Int

  Transaksi Transaksi @relation(fields: [id_transaksi], references: [id_transaksi])
  Menu      Menu      @relation(fields: [id_menu], references: [id_menu])
}

model Menu {
  id_menu   String  @id @default(uuid())
  nama_menu String  @unique
  jenis     Jenis
  deskripsi String?
  gambar    String
  harga     Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  DetailTransaksi DetailTransaksi[]
}

model Meja {
  id_meja    String @id @default(uuid())
  nomor_meja String @unique

  Transaksi Transaksi[]
}

enum Role {
  admin
  kasir
  manajer
}

enum Status {
  belum_bayar
  lunas
}

enum Jenis {
  makanan
  minuman
}
